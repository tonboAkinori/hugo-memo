<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Others on Tonbo</title>
    <link>https://tonboAkinori.github.io/hugo-memo/other/</link>
    <description>Recent content in Others on Tonbo</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Tue, 29 Dec 2020 11:02:05 +0600</lastBuildDate><atom:link href="https://tonboAkinori.github.io/hugo-memo/other/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>アライメント</title>
      <link>https://tonboAkinori.github.io/hugo-memo/other/001-align/</link>
      <pubDate>Tue, 29 Dec 2020 11:02:05 +0600</pubDate>
      
      <guid>https://tonboAkinori.github.io/hugo-memo/other/001-align/</guid>
      <description>アライメントによって、例外が発生したためその理由をネットで調べた時のメモ。
CPU に起因する問題 プログラミング言語ではなく、CPUに起因する問題。 特に、データのメモリアドレスに関する制約と言える。
アライメントとは PCUとメモリ間のデータやり取りは、データバスで行われる。 32ビットCPUでは、データを一度に32ビット読み書きできることが多い。 ただし、NビットCPUのデータバス幅がNビットであるとは限らない。 このため、メモリの最初の4バイト、次の４バイト、その次の4バイト、、、と続き、 この単位での4バイトは一度に読み書きできることになる。
よって、４バイト整数をメモリに格納する場合、先頭アドレスが4の倍数になるようにすれば、 1回のメモリアクセスで読み書きができる。 このデータの先頭アドレスを4の倍数にすることを、4バイト境界にアラインするという。</description>
    </item>
    
  </channel>
</rss>
